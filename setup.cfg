[flake8]
max-line-length = 119
# https://www.flake8rules.com/
ignore =
    E731, # Do not assign a lambda expression, use a def
    E402, # module level import not at top of file
    F401, # imported but unused

[isort]
multi_line_output=3
include_trailing_comma=True
force_grid_wrap=0
use_parentheses=True

[mypy]
# Specify the target platform details in config, so your developers are
# free to run mypy on Windows, Linux, or macOS and get consistent
# results.
python_version=3.8
platform=linux
strict=True
strict_optional=True

[pylint]
good-names = i,j,k,e,x,ex,_,pk,id
max-args = 5
max-attributes = 10
max-bool-expr = 5
max-branches = 10
max-locals = 8
max-module-lines = 200
max-nested-blocks = 3
max-public-methods = 10
max-returns = 5
max-statements = 25
max-line-length = 120
output-format = colorized

disable =
    C0111, ; Missing module docstring (missing-docstring)
    C0330, ; Wrong hanging indentation before block (add 4 spaces)
    C0114, ; Missing module docstring (missing-module-docstring)
    C0116, ; Missing function or method docstring (missing-function-docstring)
    C0413, ; Import should be placed at the top of the module (wrong-import-position)
    C0415, ; Import outside toplevel (import-outside-toplevel)
    E0213, ; Method should have "self" as first argument (no-self-argument) - N805 for flake8
    R0201, ; Method could be a function (no-self-use)
    R0401, ; Cyclic import (cyclic-import)
    R0901, ; Too many ancestors (m/n) (too-many-ancestors)
    R0903, ; Too few public methods (m/n) (too-few-public-methods)


load-plugins =
    pylint.extensions.bad_builtin,
    pylint.extensions.check_elif,
    pylint.extensions.comparetozero,
    pylint.extensions.emptystring,
    pylint.extensions.redefined_variable_type

logging-modules=logging


[coverage:run]
omit = tests/*,**/__main__.py,*/site-packages/*
branch = True

[coverage:report]
show_missing = True
fail_under = 95
# Regexes for lines to exclude from consideration
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover

    # Don't complain about missing debug-only code:
    def __repr__
    if self\.debug

    # Don't complain if tests don't hit defensive assertion code:
    raise AssertionError
    raise NotImplementedError

    # Don't complain if non-runnable code isn't run:
    if 0:
    if __name__ == .__main__.:
